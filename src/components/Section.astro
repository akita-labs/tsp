---
interface Props {
    id?: string;
    theme?: 'light' | 'dark' | 'gradient';
    label?: string;
    title?: string;
    subtitle?: string;
    fullWidth?: boolean;
    className?: string;
}

const { 
    id, 
    theme = 'light',
    label,
    title,
    subtitle,
    fullWidth = false,
    className = ''
} = Astro.props;
---

<section 
    id={id} 
    class={`section section-${theme} ${className}`}
    data-theme-section={theme}
>
    <div class={fullWidth ? 'container-fluid' : 'container'}>
        {(label || title || subtitle) && (
            <div class="section-header">
                {label && <span class="section-label">{label}</span>}
                {title && <h2 class="section-title">{title}</h2>}
                {subtitle && <p class="section-subtitle">{subtitle}</p>}
            </div>
        )}
        <div class="section-content">
            <slot />
        </div>
    </div>
</section>

<style>
    .section {
        position: relative;
        padding: calc(var(--section-padding) * 1.2) 0;
        overflow: hidden;
    }
    
    .section-light {
        background: linear-gradient(135deg, #ffffff 0%, #fef9f0 100%);
    }
    
    .section-dark {
        background: linear-gradient(135deg, var(--color-dark) 0%, var(--color-dark-tint) 100%);
        color: var(--color-text-light);
    }
    
    .section-gradient {
        background: linear-gradient(135deg, 
            rgba(254, 249, 240, 0.5) 0%, 
            rgba(255, 255, 255, 0.8) 50%, 
            rgba(254, 249, 240, 0.5) 100%);
    }
    
    .container {
        width: 100%;
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 var(--container-padding);
    }
    
    .container-fluid {
        width: 100%;
        padding: 0 calc(var(--container-padding) * 2);
    }
    
    .section-header {
        text-align: center;
        margin-bottom: calc(var(--row-gap) * 2);
        animation: fadeInUp 0.6s ease-out;
    }
    
    .section-label {
        display: inline-block;
        padding: 0.5rem 1.25rem;
        background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-hover) 100%);
        color: var(--color-dark);
        font-size: 0.875rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.1em;
        border-radius: 2rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 4px 15px rgba(244, 203, 105, 0.3);
    }
    
    .section-title {
        font-size: clamp(2.5rem, 4vw, 3.5rem);
        font-weight: 700;
        line-height: 1.2;
        margin-bottom: 1.5rem;
        background: linear-gradient(135deg, var(--color-dark) 0%, var(--color-dark-tint) 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .section-dark .section-title {
        background: linear-gradient(135deg, var(--color-light) 0%, var(--color-primary) 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .section-subtitle {
        font-size: clamp(1.125rem, 2vw, 1.375rem);
        color: var(--color-text);
        max-width: 48rem;
        margin: 0 auto;
        line-height: 1.8;
        opacity: 0.9;
    }
    
    .section-dark .section-subtitle {
        color: var(--color-text-light);
    }
    
    .section-content {
        position: relative;
        z-index: 1;
    }
    
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    /* Responsive adjustments for PC */
    @media (min-width: 1440px) {
        .container {
            max-width: 1600px;
        }
    }
    
    @media (min-width: 1920px) {
        .container {
            max-width: 1800px;
        }
        
        .section {
            padding: calc(var(--section-padding) * 1.5) 0;
        }
    }
</style>