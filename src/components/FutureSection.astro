---
import Section from './Section.astro';
import Card from './Card.astro';
---

<Section 
    id="future" 
    theme="dark"
    label="未来展望"
    title="代理式网络的基石"
    subtitle="在由AI代理构成的下一代互联网中，代理之间如何安全地识别和通信？TSP提供了关键的底层信任设施。"
>
    <div class="future-container">
        <!-- Vision Cards -->
        <div class="vision-grid">
            <Card variant="gradient" className="vision-card">
                <div class="vision-icon">
                    <span class="icon-emoji">🤖</span>
                    <div class="icon-pulse"></div>
                </div>
                <h3 class="vision-title">AI 代理时代</h3>
                <p class="vision-description">
                    自主AI代理将成为互联网的主要参与者，它们需要相互验证身份和建立信任。
                </p>
                <div class="vision-stats">
                    <div class="stat">
                        <span class="stat-value">10B+</span>
                        <span class="stat-label">预计代理数量</span>
                    </div>
                    <div class="stat">
                        <span class="stat-value">2030</span>
                        <span class="stat-label">全面普及</span>
                    </div>
                </div>
            </Card>
            
            <Card variant="gradient" className="vision-card">
                <div class="vision-icon">
                    <span class="icon-emoji">🔗</span>
                    <div class="icon-pulse"></div>
                </div>
                <h3 class="vision-title">互操作性挑战</h3>
                <p class="vision-description">
                    不同平台和协议的代理需要一个通用的信任层来实现无缝交互。
                </p>
                <div class="vision-stats">
                    <div class="stat">
                        <span class="stat-value">100+</span>
                        <span class="stat-label">代理平台</span>
                    </div>
                    <div class="stat">
                        <span class="stat-value">1个</span>
                        <span class="stat-label">通用协议</span>
                    </div>
                </div>
            </Card>
            
            <Card variant="gradient" className="vision-card vision-card-primary">
                <div class="vision-icon">
                    <span class="icon-emoji">🛡️</span>
                    <div class="icon-pulse"></div>
                </div>
                <h3 class="vision-title">TSP 解决方案</h3>
                <p class="vision-description">
                    为代理网络提供去中心化、可验证、安全的身份和通信基础设施。
                </p>
                <div class="vision-stats">
                    <div class="stat">
                        <span class="stat-value">∞</span>
                        <span class="stat-label">扩展能力</span>
                    </div>
                    <div class="stat">
                        <span class="stat-value">0</span>
                        <span class="stat-label">中心依赖</span>
                    </div>
                </div>
            </Card>
        </div>
        
        <!-- Interactive Ecosystem Diagram -->
        <Card variant="elevated" className="ecosystem-card">
            <h3 class="ecosystem-title">连接代理生态系统</h3>
            <div class="ecosystem-diagram">
                <div class="ecosystem-layer layer-discovery">
                    <div class="layer-header">
                        <span class="layer-icon">🔍</span>
                        <span class="layer-name">发现层</span>
                    </div>
                    <div class="layer-items">
                        <div class="item">NANDA Index</div>
                        <div class="item">DNS</div>
                        <div class="item">IPFS</div>
                    </div>
                </div>
                
                <div class="ecosystem-connector">
                    <div class="connector-line"></div>
                    <div class="connector-label">集成</div>
                </div>
                
                <div id="tsp-layer" class="ecosystem-layer layer-tsp">
                    <div id="tsp-placeholder" class="tsp-placeholder">
                        <span class="placeholder-text">缺失的信任层</span>
                        <span class="placeholder-icon">❓</span>
                    </div>
                    <div id="tsp-content" class="tsp-content hidden">
                        <div class="layer-header">
                            <span class="layer-icon">🔐</span>
                            <span class="layer-name">TSP 信任层</span>
                        </div>
                        <div class="layer-features">
                            <span class="feature">身份验证</span>
                            <span class="feature">密钥交换</span>
                            <span class="feature">安全信道</span>
                        </div>
                    </div>
                </div>
                
                <div class="ecosystem-connector">
                    <div class="connector-line"></div>
                    <div class="connector-label">保护</div>
                </div>
                
                <div class="ecosystem-layer layer-communication">
                    <div class="layer-header">
                        <span class="layer-icon">💬</span>
                        <span class="layer-name">通信层</span>
                    </div>
                    <div class="layer-items">
                        <div class="item">MCP Protocol</div>
                        <div class="item">A2A Messaging</div>
                        <div class="item">WebRTC</div>
                    </div>
                </div>
            </div>
            
            <div class="ecosystem-action">
                <button id="enable-tsp-btn" class="enable-btn">
                    <span class="btn-icon">⚡</span>
                    <span class="btn-text">启用 TSP 信任跨越层</span>
                    <span class="btn-arrow">→</span>
                </button>
                <p class="action-description">
                    MIT Nanda和微软Open Agentic Web等项目构想了高层组件，但它们都隐含地需要一个安全的底层协议。
                    点击按钮，查看TSP如何填补这一关键空白。
                </p>
            </div>
        </Card>
        
        <!-- Timeline -->
        <div class="timeline-section">
            <div class="timeline-header">
                <h3 class="timeline-title">
                    <span class="title-icon">🚀</span>
                    发展路线图
                </h3>
                <p class="timeline-subtitle">从愿景到现实的演进之路</p>
            </div>
            
            <div class="timeline-container">
                <div class="timeline-path">
                    <svg class="timeline-svg" viewBox="0 0 1200 200" preserveAspectRatio="none">
                        <path class="timeline-line" d="M 50 100 Q 300 50 600 100 T 1150 100" stroke="url(#gradient)" stroke-width="3" fill="none"/>
                        <defs>
                            <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                <stop offset="0%" style="stop-color:var(--color-primary);stop-opacity:0.3" />
                                <stop offset="50%" style="stop-color:var(--color-primary);stop-opacity:1" />
                                <stop offset="100%" style="stop-color:var(--color-primary-hover);stop-opacity:1" />
                            </linearGradient>
                        </defs>
                    </svg>
                </div>
                
                <div class="timeline-items">
                    <div class="timeline-item phase-1">
                        <div class="timeline-card">
                            <div class="card-year">
                                <span class="year-number">2024</span>
                                <span class="year-label">Phase 1</span>
                            </div>
                            <div class="card-content">
                                <h4 class="card-title">协议标准化</h4>
                                <p class="card-description">完成TSP协议规范和参考实现</p>
                                <div class="card-progress">
                                    <div class="progress-bar" style="width: 80%"></div>
                                </div>
                                <div class="card-stats">
                                    <span class="stat">✅ 核心规范</span>
                                    <span class="stat">🔧 参考实现</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="timeline-item phase-2">
                        <div class="timeline-card">
                            <div class="card-year">
                                <span class="year-number">2025</span>
                                <span class="year-label">Phase 2</span>
                            </div>
                            <div class="card-content">
                                <h4 class="card-title">早期采用</h4>
                                <p class="card-description">首批AI代理平台集成TSP</p>
                                <div class="card-progress">
                                    <div class="progress-bar" style="width: 40%"></div>
                                </div>
                                <div class="card-stats">
                                    <span class="stat">🤝 10+ 合作伙伴</span>
                                    <span class="stat">🚀 MVP 发布</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="timeline-item phase-3">
                        <div class="timeline-card">
                            <div class="card-year">
                                <span class="year-number">2026</span>
                                <span class="year-label">Phase 3</span>
                            </div>
                            <div class="card-content">
                                <h4 class="card-title">生态系统成长</h4>
                                <p class="card-description">主流平台支持，开发者工具完善</p>
                                <div class="card-progress">
                                    <div class="progress-bar" style="width: 20%"></div>
                                </div>
                                <div class="card-stats">
                                    <span class="stat">💻 SDK 发布</span>
                                    <span class="stat">🌐 全球扩展</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="timeline-item phase-4 highlight">
                        <div class="timeline-card">
                            <div class="card-year">
                                <span class="year-number">2030</span>
                                <span class="year-label">Ultimate</span>
                            </div>
                            <div class="card-content">
                                <h4 class="card-title">全面普及</h4>
                                <p class="card-description">TSP成为代理网络的事实标准</p>
                                <div class="card-milestone">
                                    <span class="milestone-icon">🏆</span>
                                    <span class="milestone-text">行业标准</span>
                                </div>
                                <div class="card-stats">
                                    <span class="stat">🌍 全球采用</span>
                                    <span class="stat">♾️ 无限扩展</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Section>

<style>
    .future-container {
        max-width: 1600px;
        margin: 0 auto;
    }
    
    /* Vision Grid */
    .vision-grid {
        display: grid;
        gap: 2rem;
        margin-bottom: 4rem;
    }
    
    @media (min-width: 768px) {
        .vision-grid {
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        }
    }
    
    @media (min-width: 1200px) {
        .vision-grid {
            grid-template-columns: repeat(3, 1fr);
            gap: 3rem;
        }
    }
    
    .vision-card {
        text-align: center;
        position: relative;
        background: rgba(255, 255, 255, 0.95) !important;
        border: 1px solid rgba(244, 203, 105, 0.3);
        color: var(--color-dark) !important;
    }
    
    .vision-card * {
        color: var(--color-dark) !important;
    }
    
    .vision-card .stat-value {
        color: var(--color-primary) !important;
    }
    
    .vision-card-primary {
        transform: scale(1.05);
        border: 2px solid var(--color-primary);
    }
    
    @media (min-width: 1200px) {
        .vision-card-primary {
            transform: scale(1.08);
        }
    }
    
    .vision-icon {
        position: relative;
        margin-bottom: 1.5rem;
    }
    
    .icon-emoji {
        font-size: 3.5rem;
        display: block;
        filter: drop-shadow(0 10px 20px rgba(244, 203, 105, 0.3));
    }
    
    .icon-pulse {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100px;
        height: 100px;
        background: radial-gradient(circle, var(--color-primary), transparent);
        opacity: 0.3;
        border-radius: 50%;
        animation: pulse 2s ease-in-out infinite;
    }
    
    .vision-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--color-dark);
        margin-bottom: 1rem;
    }
    
    .vision-description {
        color: var(--color-dark) !important;
        line-height: 1.7;
        margin-bottom: 1.5rem;
        min-height: 3em;
    }
    
    .vision-stats {
        display: flex;
        justify-content: space-around;
        padding-top: 1rem;
        border-top: 1px solid rgba(244, 203, 105, 0.2);
    }
    
    .stat {
        text-align: center;
    }
    
    .stat-value {
        display: block;
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--color-primary);
        margin-bottom: 0.25rem;
    }
    
    .stat-label {
        font-size: 0.75rem;
        color: var(--color-dark) !important;
        opacity: 0.7;
        text-transform: uppercase;
    }
    
    /* Ecosystem Diagram */
    .ecosystem-card {
        background: rgba(255, 255, 255, 0.98) !important;
        padding: 3rem;
        color: var(--color-dark) !important;
    }
    
    
    .ecosystem-title {
        font-size: 2rem;
        font-weight: 600;
        color: var(--color-dark) !important;
        text-align: center;
        margin-bottom: 3rem;
    }
    
    .ecosystem-diagram {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        max-width: 800px;
        margin: 0 auto 3rem;
    }
    
    .ecosystem-layer {
        background: linear-gradient(135deg, #ffffff 0%, #fef9f0 100%);
        border: 2px solid var(--color-primary);
        border-radius: var(--border-radius);
        padding: 2rem;
        transition: all var(--animation-primary);
        box-shadow: 0 4px 12px rgba(244, 203, 105, 0.2);
    }
    
    .layer-discovery {
        background: linear-gradient(135deg, #3b82f6 0%, #60a5fa 50%, #93c5fd 100%);
        color: white;
    }
    
    .layer-communication {
        background: linear-gradient(135deg, #10b981 0%, #34d399 50%, #6ee7b7 100%);
        color: white;
    }
    
    .layer-discovery .layer-name,
    .layer-communication .layer-name {
        color: white;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    
    .ecosystem-layer:hover {
        transform: scale(1.02);
        box-shadow: 0 10px 30px rgba(244, 203, 105, 0.3);
        border-color: var(--color-primary-hover);
    }
    
    .layer-header {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
        margin-bottom: 1rem;
    }
    
    .layer-icon {
        font-size: 2rem;
    }
    
    .layer-name {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--color-dark);
    }
    
    .layer-discovery .layer-name,
    .layer-communication .layer-name {
        color: var(--color-dark);
    }
    
    .layer-items {
        display: flex;
        justify-content: center;
        gap: 1rem;
        flex-wrap: wrap;
    }
    
    .item {
        padding: 0.5rem 1rem;
        background: rgba(255, 255, 255, 0.9);
        border: 1px solid rgba(244, 203, 105, 0.6);
        border-radius: var(--border-radius-small);
        font-size: 0.875rem;
        color: var(--color-dark);
        font-weight: 600;
    }
    
    .layer-features {
        display: flex;
        justify-content: center;
        gap: 1rem;
        flex-wrap: wrap;
    }
    
    .feature {
        padding: 0.5rem 1rem;
        background: rgba(255, 255, 255, 0.9);
        border: 2px solid var(--color-dark);
        border-radius: var(--border-radius-small);
        font-size: 0.875rem;
        color: var(--color-dark);
        font-weight: 600;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    .layer-tsp {
        position: relative;
        min-height: 120px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .tsp-placeholder {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        padding: 2rem;
        border: 3px dashed var(--color-border);
        border-radius: var(--border-radius-small);
        background: rgba(255, 255, 255, 0.5);
        width: 100%;
    }
    
    .placeholder-text {
        color: var(--color-text);
        opacity: 0.6;
        font-weight: 500;
    }
    
    .placeholder-icon {
        font-size: 2rem;
        opacity: 0.4;
    }
    
    .tsp-content {
        width: 100%;
        transition: all var(--animation-bounce);
    }
    
    .tsp-content.hidden {
        display: none;
    }
    
    .layer-tsp.active {
        background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-hover) 100%);
        border-color: var(--color-primary);
        transform: scale(1.05);
        box-shadow: 0 20px 40px rgba(244, 203, 105, 0.3);
    }
    
    .layer-tsp.active .layer-name,
    .layer-tsp.active .feature {
        color: var(--color-dark);
    }
    
    .ecosystem-connector {
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        height: 40px;
    }
    
    .connector-line {
        position: absolute;
        width: 2px;
        height: 100%;
        background: linear-gradient(180deg, var(--color-primary) 0%, var(--color-primary-hover) 100%);
        left: 50%;
        transform: translateX(-50%);
    }
    
    .connector-label {
        background: white;
        padding: 0.25rem 1rem;
        border: 1px solid var(--color-primary);
        border-radius: 1rem;
        font-size: 0.75rem;
        font-weight: 500;
        color: var(--color-primary);
        z-index: 1;
        position: relative;
    }
    
    /* Action Button */
    .ecosystem-action {
        text-align: center;
    }
    
    .enable-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        padding: 1rem 2rem;
        background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-hover) 100%);
        color: var(--color-dark);
        border: none;
        border-radius: var(--border-radius-small);
        font-size: 1.125rem;
        font-weight: 600;
        cursor: pointer;
        transition: all var(--animation-primary);
        box-shadow: 0 10px 30px rgba(244, 203, 105, 0.3);
    }
    
    .enable-btn:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 15px 40px rgba(244, 203, 105, 0.4);
    }
    
    .enable-btn:disabled {
        opacity: 0.7;
        cursor: not-allowed;
        transform: none;
    }
    
    .btn-icon {
        font-size: 1.5rem;
        animation: pulse 2s infinite;
    }
    
    .btn-arrow {
        transition: transform var(--animation-primary);
    }
    
    .enable-btn:hover .btn-arrow {
        transform: translateX(5px);
    }
    
    .action-description {
        margin-top: 1.5rem;
        color: var(--color-dark) !important;
        line-height: 1.7;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
    }
    
    /* Timeline */
    .timeline-section {
        margin-top: 4rem;
        padding: 4rem 2rem;
        background: linear-gradient(135deg, 
            rgba(255, 255, 255, 0.98) 0%, 
            rgba(254, 249, 240, 0.95) 50%,
            rgba(255, 255, 255, 0.98) 100%);
        border-radius: var(--border-radius);
        position: relative;
        overflow: hidden;
    }
    
    .timeline-section::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -10%;
        width: 500px;
        height: 500px;
        background: radial-gradient(circle, rgba(244, 203, 105, 0.1) 0%, transparent 70%);
        pointer-events: none;
    }
    
    .timeline-header {
        text-align: center;
        margin-bottom: 4rem;
        position: relative;
        z-index: 1;
    }
    
    .timeline-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--color-dark);
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }
    
    .title-icon {
        font-size: 2.5rem;
        animation: float 3s ease-in-out infinite;
    }
    
    .timeline-subtitle {
        font-size: 1.125rem;
        color: var(--color-text);
        opacity: 0.8;
    }
    
    .timeline-container {
        position: relative;
        max-width: 1400px;
        margin: 0 auto;
    }
    
    .timeline-path {
        position: absolute;
        top: 100px;
        left: 0;
        right: 0;
        height: 200px;
        z-index: 0;
    }
    
    .timeline-svg {
        width: 100%;
        height: 100%;
    }
    
    .timeline-line {
        stroke-dasharray: 2000;
        stroke-dashoffset: 2000;
        animation: drawPath 3s ease-out forwards;
    }
    
    @keyframes drawPath {
        to {
            stroke-dashoffset: 0;
        }
    }
    
    .timeline-items {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 2rem;
        position: relative;
        z-index: 1;
    }
    
    @media (max-width: 1200px) {
        .timeline-items {
            grid-template-columns: repeat(2, 1fr);
        }
    }
    
    @media (max-width: 768px) {
        .timeline-items {
            grid-template-columns: 1fr;
        }
    }
    
    .timeline-item {
        opacity: 0;
        animation: fadeInUp 0.6s ease-out forwards;
    }
    
    .timeline-item.phase-1 {
        animation-delay: 0.2s;
    }
    
    .timeline-item.phase-2 {
        animation-delay: 0.4s;
    }
    
    .timeline-item.phase-3 {
        animation-delay: 0.6s;
    }
    
    .timeline-item.phase-4 {
        animation-delay: 0.8s;
    }
    
    .timeline-card {
        background: white;
        border-radius: var(--border-radius);
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        border: 2px solid transparent;
        transition: all var(--animation-primary);
        position: relative;
        overflow: hidden;
    }
    
    .timeline-card::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(244, 203, 105, 0.05) 0%, transparent 50%);
        transform: rotate(45deg);
        pointer-events: none;
    }
    
    .timeline-card:hover {
        transform: translateY(-10px) scale(1.02);
        box-shadow: 0 20px 40px rgba(244, 203, 105, 0.2);
        border-color: var(--color-primary);
    }
    
    .timeline-item.highlight .timeline-card {
        background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-hover) 100%);
        border-color: var(--color-primary);
        color: var(--color-dark);
    }
    
    .card-year {
        display: flex;
        align-items: baseline;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }
    
    .year-number {
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-hover) 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .timeline-item.highlight .year-number {
        -webkit-text-fill-color: var(--color-dark);
    }
    
    .year-label {
        font-size: 0.875rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        padding: 0.25rem 0.75rem;
        background: rgba(244, 203, 105, 0.1);
        border: 1px solid var(--color-primary);
        border-radius: 1rem;
        color: var(--color-primary);
    }
    
    .timeline-item.highlight .year-label {
        background: rgba(255, 255, 255, 0.2);
        border-color: var(--color-dark);
        color: var(--color-dark);
    }
    
    .card-content {
        position: relative;
        z-index: 1;
    }
    
    .card-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--color-dark);
        margin-bottom: 0.75rem;
    }
    
    .timeline-item.highlight .card-title {
        color: var(--color-dark);
    }
    
    .card-description {
        color: var(--color-text);
        line-height: 1.6;
        margin-bottom: 1.5rem;
    }
    
    .timeline-item.highlight .card-description {
        color: var(--color-dark);
        opacity: 0.9;
    }
    
    .card-progress {
        height: 6px;
        background: rgba(244, 203, 105, 0.1);
        border-radius: 3px;
        overflow: hidden;
        margin-bottom: 1.5rem;
    }
    
    .progress-bar {
        height: 100%;
        background: linear-gradient(90deg, var(--color-primary) 0%, var(--color-primary-hover) 100%);
        border-radius: 3px;
        transition: width 2s ease-out;
        animation: shimmer 2s ease-in-out infinite;
    }
    
    .timeline-item.highlight .progress-bar {
        background: var(--color-dark);
    }
    
    .card-stats {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }
    
    .stat {
        font-size: 0.875rem;
        padding: 0.375rem 0.75rem;
        background: rgba(244, 203, 105, 0.1);
        border-radius: 1rem;
        color: var(--color-dark);
        font-weight: 500;
    }
    
    .timeline-item.highlight .stat {
        background: rgba(255, 255, 255, 0.2);
        color: var(--color-dark);
    }
    
    .card-milestone {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;
        padding: 1rem;
        margin-bottom: 1.5rem;
        background: rgba(255, 255, 255, 0.2);
        border: 2px solid var(--color-dark);
        border-radius: var(--border-radius-small);
    }
    
    .milestone-icon {
        font-size: 2rem;
    }
    
    .milestone-text {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--color-dark);
    }
    
    @keyframes shimmer {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.7; }
    }
    
    @keyframes pulse {
        0%, 100% {
            opacity: 1;
            transform: scale(1);
        }
        50% {
            opacity: 0.8;
            transform: scale(1.1);
        }
    }
    
    @media (max-width: 768px) {
        .ecosystem-diagram {
            gap: 0.5rem;
        }
        
        .timeline {
            padding-left: 2rem;
        }
    }
</style>

<script>
    const enableTspBtn = document.getElementById('enable-tsp-btn');
    const tspLayer = document.getElementById('tsp-layer');
    const tspPlaceholder = document.getElementById('tsp-placeholder');
    const tspContent = document.getElementById('tsp-content');

    enableTspBtn?.addEventListener('click', () => {
        // Hide placeholder
        tspPlaceholder.style.display = 'none';
        
        // Show content
        tspContent.classList.remove('hidden');
        
        // Activate layer
        tspLayer.classList.add('active');
        
        // Update button
        enableTspBtn.innerHTML = `
            <span class="btn-icon">✅</span>
            <span class="btn-text">TSP 已成功启用!</span>
        `;
        enableTspBtn.disabled = true;
        
        // Add animation to connected layers
        document.querySelectorAll('.ecosystem-layer:not(.layer-tsp)').forEach(layer => {
            layer.style.borderColor = 'var(--color-primary)';
            layer.style.transform = 'scale(1.02)';
            setTimeout(() => {
                layer.style.transform = '';
            }, 500);
        });
    });
</script>